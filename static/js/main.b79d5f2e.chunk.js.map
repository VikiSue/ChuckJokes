{"version":3,"sources":["components/Form/InputFilds.js","services/fetchData.js","components/Loader.js","services/validators.js","components/Form/SearchForm.js","components/Form/useSearchForm.js","redux/actions/getCategories.js","types.js","redux/actions/onSearch.js","svg.js","components/SearchWrap/SearchWrap.js","redux/actions/showFavorite.js","components/Card/Card.js","redux/actions/actionWithFavorite.js","components/Favorite/FavoriteList.js","components/Favorite/Favorite.jsx","components/JokesList/JokesList.js","components/Favorite/FavoriteWithOverlay.js","components/App/App.js","components/App/useApp.jsx","serviceWorker.js","redux/reducers/onJokesSearch.js","redux/reducers/onFavoriteAdd.js","redux/configs/rootReducer.js","redux/configs/createStore.js","index.js","img/Chuck_Norris.png"],"names":["InputField","placeholder","type","input","meta","isFieldInvalid","touched","invalid","className","error","RadioInputField","radioClass","fetchData","url","fetch","then","res","json","Loader","textLength","value","length","undefined","SearchFormRedux","reduxForm","form","getCategories","handleSubmit","categories","isLoading","jokes","useState","searchType","setSearchType","categoty","setCategory","setText","useEffect","onSearchTypeChange","e","target","handleRadioQuery","handleTextQuery","dbtDisabled","useSearchForm","onSubmit","Field","component","name","onChange","map","item","key","data","validate","disabled","SearchFormContainer","connect","state","searchForm","dispatch","result","payload","catch","err","propTypes","PropTypes","func","array","bool","HeartSVG","width","height","viewBox","fill","xmlns","d","RedHeartSVG","MessageSVG","LinkSVG","FavoriteOpenSvg","cx","cy","r","x","y","rx","FavoriteCloseSvg","transform","SearchWrapContainer","onFavShow","searchNull","onSearch","category","text","endPoint","onFavoriteShow","onClick","values","textField","string","CardContainer","favorite","addToFavorite","id","deleteFromFavorite","favoriteList","moderator","find","joke","href","moment","updated_at","fromNow","index","shape","isRequired","arrayOf","object","FavoriteList","src","chuck","alt","Favorite","JokesListContainer","FavoriteWithOverlayContainer","onFavoriteHide","in","timeout","classNames","unmountOnExit","AppContainer","setFavorite","handleStorage","a","JSON","parse","localStorage","getItem","fav","useApp","Boolean","window","location","hostname","match","initialValue","onJokesSearch","action","Array","initialState","rootReducer","combineReducers","newFavorite","filter","formReducer","logger","createLogger","collapsed","diff","persistedState","serializedState","loadState","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","console","log","saveState","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.b79d5f2e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const InputField = ({ placeholder, type, input, meta }) => {\r\n    const isFieldInvalid = meta.touched && meta.invalid;\r\n\r\n    return (\r\n        <div className=\"form__text\">\r\n            <input\r\n                {...input}\r\n                placeholder={placeholder}\r\n                type={type}\r\n                className={isFieldInvalid ? 'form__textInput   error' : 'form__textInput'}\r\n            />\r\n            <p className={isFieldInvalid ? 'form__error' : 'form__assistiveText'}>\r\n                {isFieldInvalid && meta.error}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const RadioInputField = ({ input, radioClass }) => {\r\n    return (\r\n        <input\r\n            {...input}\r\n            type=\"radio\"\r\n            className={radioClass ? `form__radio ${radioClass}` : 'form__radio'}\r\n        />\r\n    );\r\n};\r\n\r\nInputField.propTypes = {\r\n    placeholder: PropTypes.string,\r\n    type: PropTypes.string,\r\n    input: PropTypes.object,\r\n    meta: PropTypes.object,\r\n};\r\n\r\nRadioInputField.propTypes = {\r\n    input: PropTypes.object,\r\n    radioClass: PropTypes.string,\r\n};\r\n","export const fetchData = (url) => {\r\n return fetch(url).then(res => res.json());\r\n};\r\n\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n      <div className=\" w-100 d-flex justify-content-center\">\r\n    <div className=\"lds-grid\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const textLength = value =>\r\n    value && value.length >= 2 && value.length <= 120\r\n        ? undefined\r\n        : `Enter from 2 to 120  characters`;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { InputField, RadioInputField } from './InputFilds';\r\nimport { getCategories } from '../../redux/actions/getCategories';\r\nimport Loader from '../Loader';\r\nimport { useSearchForm } from './useSearchForm';\r\nimport { textLength } from '../../services/validators';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchForm = ({ getCategories, handleSubmit, categories, isLoading }) => {\r\n    const {\r\n        searchType,\r\n        onSearchTypeChange,\r\n        handleRadioQuery,\r\n        handleTextQuery,\r\n        dbtDisabled,\r\n    } = useSearchForm(getCategories);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n            <div className=\"form__group\">\r\n                <label className=\"form__label\">\r\n                    <div className=\"form__line\">\r\n                        <Field\r\n                            component={RadioInputField}\r\n                            name=\"searchType\"\r\n                            type=\"radio\"\r\n                            value=\"random\"\r\n                            onChange={onSearchTypeChange}\r\n                        />\r\n                        <span> Random</span>\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            {/*   CATEGORIES*/}\r\n            <div className=\"form__group\">\r\n                <label\r\n                    className={\r\n                        searchType === 'byCategory'\r\n                            ? 'form__label form__label--shown'\r\n                            : 'form__label'\r\n                    }\r\n                >\r\n                    <div className=\"form__line\">\r\n                        {' '}\r\n                        <Field\r\n                            component={RadioInputField}\r\n                            name=\"searchType\"\r\n                            type=\"radio\"\r\n                            value=\"byCategory\"\r\n                            onChange={onSearchTypeChange}\r\n                        />\r\n                        <span>From categories</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            searchType === 'byCategory'\r\n                                ? 'categories__slide '\r\n                                : ' categories__slide--hidden'\r\n                        }\r\n                    >\r\n                        <div className=\"categories__list\">\r\n                            {categories.map(item => (\r\n                                <label key={item} className=\"categories__label\">\r\n                                    <Field\r\n                                        onChange={handleRadioQuery}\r\n                                        component={RadioInputField}\r\n                                        name=\"category\"\r\n                                        type=\"radio\"\r\n                                        value={item}\r\n                                        radioClass=\"categories__input\"\r\n                                    />\r\n                                    <p className=\"categories__text\">{item}</p>\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            {/*   SEARCH INPUT*/}\r\n            <div className=\"form__group\">\r\n                <label className=\"form__inputGroup\">\r\n                    <div className=\"form__line\">\r\n                        <Field\r\n                            component={RadioInputField}\r\n                            name=\"searchType\"\r\n                            type=\"radio\"\r\n                            value=\"byText\"\r\n                            data=\"byText\"\r\n                            onChange={onSearchTypeChange}\r\n                        />\r\n                        <span>Search</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            searchType === 'byText'\r\n                                ? 'categories__slide'\r\n                                : 'categories__slide categories__slide--hidden'\r\n                        }\r\n                    >\r\n                        <Field\r\n                            component={InputField}\r\n                            placeholder=\"Free text search...\"\r\n                            name=\"textField\"\r\n                            type=\"text\"\r\n                            onChange={handleTextQuery}\r\n                            validate={searchType === 'byText' ? [textLength] : null}\r\n                        />\r\n                    </div>\r\n                </label>\r\n            </div>\r\n\r\n            {isLoading ? (\r\n                <Loader />\r\n            ) : (\r\n                <button type=\"submit\" className=\"form__btn\" disabled={dbtDisabled}>\r\n                    Get a joke\r\n                </button>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nconst SearchFormRedux = reduxForm({ form: 'search' })(SearchForm);\r\n\r\nconst SearchFormContainer = connect(\r\n    state => ({\r\n        categories: state.searchForm.categories,\r\n        isLoading: state.searchForm.isLoading,\r\n    }),\r\n    { getCategories }\r\n)(SearchFormRedux);\r\nexport default SearchFormContainer;\r\n\r\nSearchFormContainer.propTypes = {\r\n    getCategories: PropTypes.func,\r\n    handleSubmit: PropTypes.func,\r\n    categories: PropTypes.array,\r\n    isLoading: PropTypes.bool,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useSearchForm = (getCategories, jokes) => {\r\n  const [searchType, setSearchType] = useState(undefined);\r\n  const [categoty, setCategory] = useState(undefined);\r\n  const [text, setText] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  const onSearchTypeChange = e => {\r\n    const value = e.target.value;\r\n    setSearchType(value);\r\n  };\r\n\r\n  const handleRadioQuery = e => {\r\n    const value = e.target.value;\r\n    setCategory(value);\r\n  };\r\n  const handleTextQuery = e => {\r\n    const value = e.target.value;\r\n    setText(value);\r\n  };\r\n\r\n  let dbtDisabled =\r\n    searchType === undefined ||\r\n    (searchType === \"byCategory\" && categoty === undefined);\r\n\r\n\r\n  return {\r\n    searchType,\r\n    onSearchTypeChange,\r\n    handleRadioQuery,\r\n    handleTextQuery,\r\n    dbtDisabled\r\n  };\r\n};\r\n","import {\r\n    GET_CATEGORY_REQUEST,\r\n    GET_CATEGORY_SUCCESS,\r\n    GET_CATEGORY_FAILURE\r\n} from \"../../types\";\r\nimport { fetchData } from \"../../services/fetchData\";\r\n\r\nexport const getCategories = () => dispatch => {\r\n    dispatch({ type: GET_CATEGORY_REQUEST });\r\n    fetchData(\"https://api.chucknorris.io/jokes/categories\")\r\n        .then(result =>\r\n            dispatch({\r\n                type: GET_CATEGORY_SUCCESS,\r\n                payload:  result\r\n            })\r\n        )\r\n        .catch(err => {\r\n            dispatch({ type: GET_CATEGORY_FAILURE, err });\r\n        });\r\n};\r\n","//Category\r\nexport const GET_CATEGORY_REQUEST = 'GET_CATEGORY_REQUEST';\r\nexport const GET_CATEGORY_SUCCESS = 'GET_CATEGORY_SUCCESS';\r\nexport const GET_CATEGORY_FAILURE = 'GET_CATEGORY_FAILURE';\r\n\r\n//Search\r\nexport const SEARCH_REQUEST = 'SERCH_REQUEST';\r\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS';\r\nexport const SEARCH_FAILURE = 'SEARCH_FAILURE';\r\n\r\n//Favorite\r\nexport const ADD_TO_FAVORITE = 'ADD_TO_FAVORITE';\r\nexport const DELETE_FROM_FAVORITE = 'DELETE_FROM_FAVORITE';\r\n\r\n//FAVORITE SIDE-BAR\r\nexport const ON_FAVORIE_SHOW = 'ON_FAVORIE_SHOW';\r\nexport const ON_FAVORIE_HIDE = 'DELETE_FROM_HIDE';\r\n","import { SEARCH_REQUEST, SEARCH_SUCCESS, SEARCH_FAILURE } from \"../../types\";\r\nimport { fetchData } from \"../../services/fetchData\";\r\n\r\n\r\nexport const onSearch = (searchType, category, text) => dispatch => {\r\n  dispatch({ type: SEARCH_REQUEST });\r\n  const url = \"https://api.chucknorris.io/jokes\";\r\n  const endPoint =\r\n    searchType === \"random\"\r\n      ? \"/random\"\r\n      : searchType === \"byCategory\"\r\n      ? `/random?category=${category}`\r\n      : `/search?query=${text}`;\r\n\r\n\r\n  fetchData(`${url}${endPoint}`)\r\n       .then(result =>\r\n      dispatch({\r\n        type: SEARCH_SUCCESS,\r\n        payload: searchType === \"byText\" ? result.result : result\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch({ type: SEARCH_FAILURE, err });\r\n    });\r\n};\r\n","import React from \"react\";\r\n\r\nexport const HeartSVG = () => {\r\n  return (\r\n    <svg\r\n      width=\"20\"\r\n      height=\"17\"\r\n      viewBox=\"0 0 20 17\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M10 17C9.71527 17 9.44077 16.9015 9.22684 16.7224C8.41888 16.0475 7.63992 15.4132 6.95267 14.8536L6.94916 14.8507C4.93423 13.2102 3.19427 11.7935 1.98364 10.3979C0.630341 8.83778 0 7.35852 0 5.74252C0 4.17244 0.563507 2.72395 1.58661 1.66367C2.62192 0.590857 4.04251 0 5.58716 0C6.74164 0 7.79892 0.348712 8.72955 1.03637C9.19922 1.38348 9.62494 1.80829 10 2.3038C10.3752 1.80829 10.8008 1.38348 11.2706 1.03637C12.2012 0.348712 13.2585 0 14.413 0C15.9575 0 17.3782 0.590857 18.4135 1.66367C19.4366 2.72395 20 4.17244 20 5.74252C20 7.35852 19.3698 8.83778 18.0165 10.3978C16.8059 11.7935 15.0661 13.2101 13.0515 14.8504C12.363 15.4108 11.5828 16.0461 10.773 16.7227C10.5592 16.9015 10.2846 17 10 17ZM5.58716 1.11932C4.37363 1.11932 3.25882 1.58203 2.44781 2.42232C1.62476 3.2753 1.17142 4.45439 1.17142 5.74252C1.17142 7.10165 1.70013 8.31719 2.88559 9.68375C4.03137 11.0047 5.73563 12.3923 7.70889 13.9989L7.71255 14.0018C8.4024 14.5635 9.18442 15.2003 9.99832 15.8802C10.8171 15.199 11.6003 14.5612 12.2916 13.9986C14.2647 12.392 15.9688 11.0047 17.1146 9.68375C18.2999 8.31719 18.8286 7.10165 18.8286 5.74252C18.8286 4.45439 18.3752 3.2753 17.5522 2.42232C16.7413 1.58203 15.6264 1.11932 14.413 1.11932C13.524 1.11932 12.7078 1.38931 11.9872 1.92171C11.3449 2.39637 10.8975 2.99642 10.6352 3.41627C10.5003 3.63217 10.2629 3.76105 10 3.76105C9.73709 3.76105 9.49966 3.63217 9.36478 3.41627C9.10263 2.99642 8.65524 2.39637 8.01285 1.92171C7.29218 1.38931 6.47598 1.11932 5.58716 1.11932Z\"\r\n        fill=\"#FF6767\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const RedHeartSVG = () => {\r\n  return (\r\n    <svg\r\n      width=\"20\"\r\n      height=\"17\"\r\n      viewBox=\"0 0 20 17\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M18.4134 1.66367C17.3781 0.590857 15.9575 0 14.413 0C13.2585 0 12.2012 0.348712 11.2704 1.03637C10.8008 1.38348 10.3752 1.80814 10 2.3038C9.62494 1.80829 9.19922 1.38348 8.7294 1.03637C7.79877 0.348712 6.74149 0 5.58701 0C4.04251 0 2.62177 0.590857 1.58646 1.66367C0.563507 2.72395 0 4.17244 0 5.74252C0 7.35852 0.630341 8.83778 1.98364 10.3979C3.19427 11.7935 4.93423 13.2102 6.94916 14.8507C7.63718 15.411 8.41705 16.046 9.22684 16.7224C9.44077 16.9015 9.71527 17 10 17C10.2846 17 10.5592 16.9015 10.7729 16.7227C11.5826 16.0461 12.363 15.4108 13.0513 14.8503C15.0659 13.2101 16.8059 11.7935 18.0165 10.3978C19.3698 8.83778 20 7.35852 20 5.74238C20 4.17244 19.4365 2.72395 18.4134 1.66367Z\"\r\n        fill=\"#FF6767\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport const MessageSVG = () => {\r\n  return (\r\n    <svg\r\n      width=\"20\"\r\n      height=\"19\"\r\n      viewBox=\"0 0 20 19\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M17.2504 0H2.74963C1.23352 0 0 1.23328 0 2.74963V11.6238C0 13.1367 1.22815 14.368 2.73987 14.3734V18.4004L8.5271 14.3734H17.2504C18.7665 14.3734 20 13.1399 20 11.6238V2.74963C20 1.23328 18.7665 0 17.2504 0ZM18.8281 11.6238C18.8281 12.4937 18.1204 13.2015 17.2504 13.2015H8.15942L3.91174 16.1573V13.2015H2.74963C1.87964 13.2015 1.17188 12.4937 1.17188 11.6238V2.74963C1.17188 1.87952 1.87964 1.17188 2.74963 1.17188H17.2504C18.1204 1.17188 18.8281 1.87952 18.8281 2.74963V11.6238Z\"\r\n        fill=\"#ABABAB\"\r\n      />\r\n      <path\r\n        d=\"M5.35291 4.14075H14.6471V5.31262H5.35291V4.14075Z\"\r\n        fill=\"#ABABAB\"\r\n      />\r\n      <path\r\n        d=\"M5.35291 6.64075H14.6471V7.81262H5.35291V6.64075Z\"\r\n        fill=\"#ABABAB\"\r\n      />\r\n      <path\r\n        d=\"M5.35291 9.14075H14.6471V10.3126H5.35291V9.14075Z\"\r\n        fill=\"#ABABAB\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const LinkSVG = () => {\r\n  return (\r\n    <svg\r\n      width=\"10\"\r\n      height=\"10\"\r\n      viewBox=\"0 0 10 10\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M9.54539 0H5.90903C5.65799 0 5.45448 0.203515 5.45448 0.45455C5.45448 0.705585 5.65799 0.9091 5.90903 0.9091H8.44803L3.76946 5.58768C3.59198 5.76516 3.59198 6.05298 3.76946 6.2305C3.85819 6.31923 3.97452 6.36362 4.09085 6.36362C4.20718 6.36362 4.32352 6.31923 4.41223 6.23048L9.09086 1.55191V4.09091C9.09086 4.34194 9.29437 4.54546 9.54541 4.54546C9.79644 4.54546 9.99996 4.34194 9.99996 4.09091V0.45455C9.99994 0.203515 9.79642 0 9.54539 0Z\"\r\n        fill=\"#8EA7FF\"\r\n      />\r\n      <path\r\n        d=\"M7.72725 4.54544C7.47622 4.54544 7.2727 4.74895 7.2727 4.99999V9.0909H0.90908V2.72726H4.99999C5.25103 2.72726 5.45454 2.52374 5.45454 2.27271C5.45454 2.02167 5.25103 1.81818 4.99999 1.81818H0.45455C0.203515 1.81818 0 2.02169 0 2.27273V9.54545C0 9.79646 0.203515 9.99998 0.45455 9.99998H7.72727C7.97831 9.99998 8.18182 9.79646 8.18182 9.54543V4.99999C8.1818 4.74895 7.97829 4.54544 7.72725 4.54544Z\"\r\n        fill=\"#8EA7FF\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const FavoriteOpenSvg = () => {\r\n  return (\r\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"14\" cy=\"14\" r=\"14\" fill=\"#333333\"/>\r\n        <rect x=\"7\" y=\"16\" width=\"14\" height=\"2\" rx=\"1\" fill=\"white\"/>\r\n        <rect x=\"7\" y=\"10\" width=\"14\" height=\"2\" rx=\"1\" fill=\"white\"/>\r\n      </svg>\r\n\r\n  );\r\n};\r\n\r\nexport const FavoriteCloseSvg = () => {\r\n  return (\r\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"14\" cy=\"14\" r=\"14\" fill=\"#333333\"/>\r\n        <rect width=\"14.8492\" height=\"2.12131\" rx=\"1.06065\" transform=\"matrix(0.707103 -0.707111 0.707103 0.707111 8 18.5)\" fill=\"white\"/>\r\n        <rect width=\"14.8492\" height=\"2.12131\" rx=\"1.06065\" transform=\"matrix(0.707103 0.707111 -0.707103 0.707111 9.5 8)\" fill=\"white\"/>\r\n      </svg>\r\n\r\n\r\n  );\r\n};","import React from 'react';\r\nimport SearchForm from '../Form/SearchForm';\r\nimport { connect } from 'react-redux';\r\nimport { onSearch } from '../../redux/actions/onSearch';\r\nimport { FavoriteOpenSvg } from '../../svg';\r\nimport { onFavoriteShow } from '../../redux/actions/showFavorite';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchWrap = ({ onSearch, onFavoriteShow, onFavShow, searchNull }) => {\r\n    const onSubmit = values => {\r\n        onSearch(values.searchType, values.category, values.textField);\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <header className=\"main__header\">\r\n                <div>MSI 2020 </div>\r\n                <div className={onFavShow ? 'hidden' : 'main__link '} onClick={onFavoriteShow}>\r\n                    <FavoriteOpenSvg /> <span className=\"main__pale\">Favorite </span>\r\n                </div>\r\n            </header>\r\n            <h1>Hey!</h1>\r\n            <h4>Let’s try to find a joke for you:</h4>\r\n            <SearchForm onSubmit={onSubmit} />\r\n            <p>{searchNull}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst SearchWrapContainer = connect(\r\n    state => ({ onFavShow: state.searchForm.onFavShow, searchNull: state.searchForm.searchNull }),\r\n    { onSearch, onFavoriteShow }\r\n)(SearchWrap);\r\n\r\nexport default SearchWrapContainer;\r\n\r\nSearchWrapContainer.propTypes = {\r\n    onSearch: PropTypes.func,\r\n    onFavoriteShow: PropTypes.func,\r\n    onFavShow: PropTypes.func,\r\n    searchNull: PropTypes.string,\r\n};\r\n","import {ON_FAVORIE_HIDE, ON_FAVORIE_SHOW} from '../../types';\r\n\r\nexport const onFavoriteShow = () => {\r\n    return ({type: ON_FAVORIE_SHOW})\r\n};\r\n\r\nexport const onFavoriteHide = () => {\r\n    return ({type: ON_FAVORIE_HIDE})\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addToFavorite, deleteFromFavorite } from '../../redux/actions/actionWithFavorite';\r\nimport moment from 'moment';\r\nimport { HeartSVG, LinkSVG, MessageSVG, RedHeartSVG } from '../../svg';\r\n\r\nconst Card = ({ item, addToFavorite, deleteFromFavorite, jokes, favoriteList, moderator }) => {\r\n    return (\r\n        <div className={`card card${moderator}`}>\r\n            {favoriteList.find(joke => joke.id === item.id) ? (\r\n                <button\r\n                    onClick={() => deleteFromFavorite(item.id)}\r\n                    className={`card__btn card__btn${moderator}`}\r\n                >\r\n                    <RedHeartSVG />\r\n                </button>\r\n            ) : (\r\n                <button\r\n                    onClick={() => addToFavorite(item.id, jokes)}\r\n                    className={`card__btn card__btn${moderator}`}\r\n                >\r\n                    <HeartSVG />\r\n                </button>\r\n            )}\r\n            <div className=\"card__content\">\r\n                <div className=\"card__svg\">\r\n                    <div className={`card__svgWrap card__svgWrap${moderator}`}>\r\n                        <MessageSVG />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card__text\">\r\n                    <div className=\"card__id\">\r\n                        <span className=\"card__textPale\"> ID:</span>\r\n                        <a href=\"#\" className=\"card__link\">\r\n                            {item.id} <LinkSVG />\r\n                        </a>\r\n                    </div>\r\n                    <div className={`card__joke card__joke${moderator}`}>{item.value}</div>\r\n                    <div className=\"card__footer\">\r\n                        <span className=\"card__textPale\">\r\n                            {`Last update: ${moment(item.updated_at).fromNow()} ago`}\r\n                        </span>\r\n                        {item.categories.map((item, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className={`card__category card__category${moderator}`}\r\n                            >\r\n                                {item}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CardContainer = connect(\r\n    state => ({ jokes: state.searchForm.jokes, favorite: state.favorite }),\r\n    { addToFavorite, deleteFromFavorite }\r\n)(Card);\r\nexport default CardContainer;\r\n\r\nCardContainer.propTypes = {\r\n    item: PropTypes.shape ({\r\n        id: PropTypes.string,\r\n        categories: PropTypes.array\r\n    }).isRequired,\r\n    addToFavorite: PropTypes.func,\r\n    deleteFromFavorite: PropTypes.func,\r\n    jokes: PropTypes.arrayOf(PropTypes.object),\r\n    favoriteList: PropTypes.arrayOf(PropTypes.object),\r\n    moderator: PropTypes.string,\r\n};\r\n","import {ADD_TO_FAVORITE, DELETE_FROM_FAVORITE } from '../../types';\r\n\r\nexport const addToFavorite = (id, jokes) => {\r\n    return ({type: ADD_TO_FAVORITE, payload: {id, jokes}})\r\n};\r\n\r\nexport const deleteFromFavorite = (id) => {\r\n    return ({type: DELETE_FROM_FAVORITE, payload: id})\r\n};","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport chuck from '../../img/Chuck_Norris.png';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst FavoriteList = ({ favoriteList }) => {\r\n    if (favoriteList.length !== 0) {\r\n        return favoriteList.map(item => (\r\n            <Card item={item} key={item.id} favoriteList={favoriteList} moderator=\"--fav\" />\r\n        ));\r\n    }\r\n    return (\r\n        <div className=\"favorite__null \">\r\n            You haven't add any favorite jokes yet?!!!\r\n            <div className=\"favorite__sadChuck\">\r\n                <img src={chuck} className=\"favorite__img\" alt=\"sad Chuck\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default FavoriteList;\r\n\r\nFavoriteList.propTypes = {\r\n    favoriteList: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};","import React from 'react';\r\nimport FavoriteList from './FavoriteList';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Favorite = ({ favoriteList }) => {\r\n    return (\r\n        <aside className=\"favorite\">\r\n            <h3 className=\"favorite__title\">Favorite</h3>\r\n            <FavoriteList favoriteList={favoriteList} />\r\n        </aside>\r\n    );\r\n};\r\nexport default Favorite;\r\n\r\nFavorite.propTypes = {\r\n    favoriteList: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../Card/Card';\r\n\r\nconst JokesList = ({ jokes, favoriteList }) => {\r\n    return (\r\n        <div className=\"jokesList\">\r\n            {jokes.map(item => (\r\n                <Card item={item} key={item.id} favoriteList={favoriteList} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst JokesListContainer = connect(state => ({\r\n    jokes: state.searchForm.jokes,\r\n}))(JokesList);\r\n\r\nexport default JokesListContainer;\r\n\r\nJokesListContainer.propTypes = {\r\n    jokes: PropTypes.arrayOf(PropTypes.object),\r\n    favoriteList: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onFavoriteHide } from '../../redux/actions/showFavorite';\r\nimport { FavoriteCloseSvg } from '../../svg';\r\nimport CSSTransitionGroup from 'react-transition-group/cjs/CSSTransition';\r\nimport FavoriteList from './FavoriteList';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FavoriteWithOverlay = ({ favoriteList, onFavShow, onFavoriteHide }) => {\r\n    return (\r\n        <CSSTransitionGroup\r\n            in={onFavShow}\r\n            timeout={500}\r\n            classNames=\"withOverlay--shown\"\r\n            unmountOnExit\r\n        >\r\n            <div className={onFavShow ? ' withOverlay withOverlay--shown' : 'withOverlay'}>\r\n                <div className=\"withOverlay__wrap \">\r\n                    <div className=\"withOverlay__link \" onClick={onFavoriteHide}>\r\n                        <FavoriteCloseSvg /> <span className=\"withOverlay__pale\">Favorite </span>\r\n                    </div>\r\n                    <FavoriteList favoriteList={favoriteList} />\r\n                </div>\r\n            </div>\r\n        </CSSTransitionGroup>\r\n    );\r\n};\r\nconst FavoriteWithOverlayContainer = connect(\r\n    state => ({ onFavShow: state.searchForm.onFavShow }),\r\n    { onFavoriteHide }\r\n)(FavoriteWithOverlay);\r\nexport default FavoriteWithOverlayContainer;\r\n\r\nFavoriteWithOverlayContainer.propTypes = {\r\n    favoriteList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onFavShow: PropTypes.func,\r\n    onFavoriteHide: PropTypes.func,\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../scss/App.scss';\nimport SearchWrap from '../SearchWrap/SearchWrap';\nimport { connect } from 'react-redux';\nimport { useApp } from './useApp';\nimport Favorite from '../Favorite/Favorite';\nimport JokesList from '../JokesList/JokesList';\nimport FavoriteWithOverlay from '../Favorite/FavoriteWithOverlay';\n\nconst App = ({ favorite, jokes }) => {\n    const { favoriteList } = useApp(favorite);\n\n    return (\n        <div className=\"App\">\n            <div className=\"App__content\">\n                <div className=\"centerPanel\">\n                    <SearchWrap favoriteList={favoriteList} />\n                    {jokes.length !== 0 && <JokesList favoriteList={favoriteList} />}\n                </div>\n                <div className=\"sidePanel\">\n                    <Favorite favoriteList={favoriteList} />\n                </div>\n            </div>\n            <FavoriteWithOverlay favoriteList={favoriteList} />\n        </div>\n    );\n};\n\nconst AppContainer = connect(state => ({\n    favorite: state.favorite,\n    jokes: state.searchForm.jokes,\n}))(App);\n\nexport default AppContainer;\n\nAppContainer.propTypes = {\n    favorite: PropTypes.arrayOf(PropTypes.object),\n    jokes: PropTypes.arrayOf(PropTypes.object),\n};\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const useApp = (favorite) => {\r\n  const [favoriteList, setFavorite] = useState([]);\r\n  const handleStorage = async () => {\r\n    const fav = await JSON.parse(localStorage.getItem(\"favorite\"));\r\n    setFavorite(fav.favorite);\r\n  };\r\n  useEffect(() => {\r\n    handleStorage();\r\n  }, [favorite]);\r\n\r\n  return { favoriteList };\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    GET_CATEGORY_REQUEST,\r\n    GET_CATEGORY_SUCCESS,\r\n    GET_CATEGORY_FAILURE,\r\n    SEARCH_REQUEST,\r\n    SEARCH_SUCCESS,\r\n    SEARCH_FAILURE,\r\n    ON_FAVORIE_HIDE,\r\n    ON_FAVORIE_SHOW,\r\n} from '../../types';\r\n\r\nconst initialValue = {\r\n    categories: [],\r\n    jokes: [],\r\n    searchNull: null,\r\n    isLoading: false,\r\n    onFavShow: false,\r\n};\r\n\r\nconst onJokesSearch = (state = initialValue, action) => {\r\n    switch (action.type) {\r\n        case GET_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case GET_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                categories: action.payload,\r\n\r\n                isLoading: false,\r\n            };\r\n        case GET_CATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        case SEARCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case SEARCH_SUCCESS:\r\n            let res = action.payload.length === 0 && 'Sorry, nothing found :(';\r\n            return {\r\n                ...state,\r\n                jokes: action.payload instanceof Array ? action.payload : [action.payload],\r\n                searchNull: res,\r\n                isLoading: false,\r\n            };\r\n        case SEARCH_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        case ON_FAVORIE_SHOW:\r\n            return {\r\n                ...state,\r\n                onFavShow: true,\r\n            };\r\n        case ON_FAVORIE_HIDE:\r\n            return {\r\n                ...state,\r\n                onFavShow: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default onJokesSearch;\r\n","import { ADD_TO_FAVORITE, DELETE_FROM_FAVORITE } from \"../../types\";\r\n\r\nconst initialState = [];\r\nexport const onFavoriteAdd = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_FAVORITE:\r\n      let newFavorite = action.payload.jokes.filter(\r\n        joke => joke.id === action.payload.id\r\n      );\r\n      return state.length ? [...state, ...newFavorite] : [...newFavorite];\r\n\r\n    case DELETE_FROM_FAVORITE:\r\n      return state.filter(joke => joke.id !== action.payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport onJokesSearch from \"../reducers/onJokesSearch\";\r\nimport {onFavoriteAdd} from \"../reducers/onFavoriteAdd\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  searchForm: onJokesSearch,\r\n  favorite: onFavoriteAdd,\r\n  form: formReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./rootReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { onJokesSearch } from \"../reducers/onJokesSearch\";\r\n\r\nconst logger = createLogger({\r\n  collapsed: true,\r\n  diff: true\r\n});\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"favorite\");\r\n\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"favorite\", serializedState);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  applyMiddleware(thunk, logger)\r\n);\r\nstore.subscribe(() => {\r\n  saveState({favorite: store.getState().favorite});\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"../src/redux/configs/createStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Chuck_Norris.6c2fbaab.png\";"],"sourceRoot":""}